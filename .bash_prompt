# The various escape codes that we can use to color our prompt.
        RED="\[\033[0;31m\]"
     YELLOW="\[\033[1;33m\]"
      GREEN="\[\033[0;32m\]"
       BLUE="\[\033[0;34m\]"
       CYAN="\[\033[0;36m\]"
  LIGHT_RED="\[\033[1;31m\]"
LIGHT_GREEN="\[\033[1;32m\]"
 LIGHT_BLUE="\[\033[1;34m\]"
 LIGHT_CYAN="\[\033[1;36m\]"
      WHITE="\[\033[1;37m\]"
 LIGHT_GRAY="\[\033[0;37m\]"
 COLOR_NONE="\[\e[0m\]"

# CUSTOMIZE HERE
# CUSTOMIZE HERE
# CUSTOMIZE HERE
# color presets
ERROR_COLOR=${LIGHT_RED}
PATH_COLOR=${YELLOW}
USERHOST_COLOR=${COLOR_NONE}
VIRTUALENV_COLOR=${WHITE}
GITBRANCH_COLOR=${LIGHT_CYAN}

# if the string is empty, echo empty string, otherwise echo string with a trailing space
function trailing_space {
    if [ -z $1 ]; then
        echo ""
    else
        echo "$@ "
    fi
}

# if the string is empty, echo one space, otherwise echo string wrapped with spaces
function pad_with_spaces {
    if [ -z $1 ]; then
        echo " "
    else
        echo " $@ "
    fi
}

# Return the prompt symbol to use, colorized based on the return value of the
# previous command.
function set_prompt_symbol () {
  if test $1 -eq 0 ; then
      PROMPT_SYMBOL="\n\$"
  else
      PROMPT_SYMBOL="\n${ERROR_COLOR}\$${COLOR_NONE}"
  fi
}

# Determine active Python virtualenv details.
function set_virtualenv () {
  if test -z "$VIRTUAL_ENV" ; then
      PYTHON_VIRTUALENV=""
  else
      PYTHON_VIRTUALENV="(${VIRTUALENV_COLOR}`basename \"$VIRTUAL_ENV\"`${COLOR_NONE})"
  fi
}

# What is the git branch for this repository?
source /etc/bash_completion.d/git-prompt
function set_git_branch () {
    BRANCH=`__git_ps1 "%s"`
    if [ -z "$BRANCH" ]; then
        BRANCH=""
    else
        BRANCH="[${GITBRANCH_COLOR}${BRANCH}${COLOR_NONE}]"
    fi
}

# Set the full bash prompt.
function set_bash_prompt () {
  # Set the PROMPT_SYMBOL variable. We do this first so we don't lose the
  # return value of the last command.
  set_prompt_symbol $?

  # Set the git BRANCH variable.
  set_git_branch

  # Set the PYTHON_VIRTUALENV variable.
  set_virtualenv

  # Set the bash prompt variable.
  PS1="$(trailing_space ${PYTHON_VIRTUALENV})$(trailing_space ${BRANCH})${USERHOST_COLOR}\u@\h${COLOR_NONE}:${PATH_COLOR}\w${COLOR_NONE}${PROMPT_SYMBOL} "
}

# Tell bash to execute this function just before displaying its prompt.
PROMPT_COMMAND=set_bash_prompt
